<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gon125.github.io</id><title>GHL</title><subtitle>제게 유용했던 내용들을 모았습니다.</subtitle> <updated>2021-05-15T19:15:45+09:00</updated> <author> <name>Geonhyeong Lim</name> <uri>https://gon125.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://gon125.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Geonhyeong Lim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>알고리즘 선택 트리 🎄</title><link href="https://gon125.github.io/posts/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%A0%ED%83%9D-%ED%8A%B8%EB%A6%AC/" rel="alternate" type="text/html" title="알고리즘 선택 트리 🎄" /><published>2021-02-22T10:21:00+09:00</published> <updated>2021-05-15T19:15:24+09:00</updated> <id>https://gon125.github.io/posts/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%A0%ED%83%9D-%ED%8A%B8%EB%A6%AC/</id> <content src="https://gon125.github.io/posts/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%A0%ED%83%9D-%ED%8A%B8%EB%A6%AC/" /> <author> <name>Geonhyeong Lim</name> </author> <category term="Algorithm" /> <summary> 알고리즘 선택에 도움을 주는 트리. 클릭해서 이동하시면 문제에 적용할 알고리즘을 찾을 수 있습니다. 대분류 그래프 문제 혹은 그래프로 변환 가능한가? 그래프 최단 경로 문제인가? 최단경로 간선에 가중치가 없다면 ? -&amp;gt; dfs, bfs 알고리즘 시간 복잡도 구현 난이도 적용 문제 dfs, bfs O(V^2) with 인접행렬 O(V+E) with 인접리스트 쉬움 단어 변환 간선 가중치 중 음수가 있다면 ? 알고리즘 시간 복잡도 구현 난이도 적용 문제 ... </summary> </entry> <entry><title>내 맘대로 용어사전 🥸</title><link href="https://gon125.github.io/posts/%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C-%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84/" rel="alternate" type="text/html" title="내 맘대로 용어사전 🥸" /><published>2021-02-18T13:21:00+09:00</published> <updated>2021-05-15T19:05:42+09:00</updated> <id>https://gon125.github.io/posts/%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C-%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84/</id> <content src="https://gon125.github.io/posts/%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C-%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84/" /> <author> <name>Geonhyeong Lim</name> </author> <category term="Terminology" /> <summary> 분야를 막론하고 모든 용어를 습득한 순서대로 적습니다. 내 맘대로. 🙄 SRP single-responsibility-principle: 하나의 클래스는 프로그램의 하나의 기능에 대한 책임만을 가지게 하는 설계 원칙 Cocoa MVC Model-View-Controller 애플 UIKit의 MVC 패턴. View, Controller가 결합도가 너무 높음. Massive View Controllers 문제가 생김. 왜? Controller 역할이 너무 많음. 뷰마다 controller 하나씩 필요함 MVP Model-View-Presenter Cocoa MVC의 View와 View Contorller가 너무 붙어있으니 Presenter라는 View와 연관이 1도 없는 중간자를 만들어서 진짜 M... </summary> </entry> <entry><title>SwiftUI를 위한 클린 아키텍처</title><link href="https://gon125.github.io/posts/SwiftUI%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%B4%EB%A6%B0-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/" rel="alternate" type="text/html" title="SwiftUI를 위한 클린 아키텍처" /><published>2021-01-04T17:21:00+09:00</published> <updated>2021-01-04T17:21:45+09:00</updated> <id>https://gon125.github.io/posts/SwiftUI%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%B4%EB%A6%B0-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/</id> <content src="https://gon125.github.io/posts/SwiftUI%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%B4%EB%A6%B0-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98/" /> <author> <name>Geonhyeong Lim</name> </author> <category term="Architecture" /> <category term="SwiftUI" /> <summary> 들어가기에 앞서 This is the translated article of “Clean Architecture for SwiftUI” in https://nalexn.github.io/clean-architecture-swiftui/. Thank Alexey Naumov for allowing me to post this article. 이 글은 원문 “Clean Architecture for SwiftUI” 의 번역본입니다. https://nalexn.github.io/clean-architecture-swiftui/. 이 글을 번역하도록 허락해 주신 Alexey Naumov께 감사의 말씀 드립니다. 서론 왜 이 글을 번역하게 되었는가 이번에 학교 졸업 프로젝트에서 iOS 개발을 할 ... </summary> </entry> <entry><title>맥북 사용자의 윈도우10 개발환경 설정하기</title><link href="https://gon125.github.io/posts/%EB%A7%A5%EB%B6%81-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9C%88%EB%8F%84%EC%9A%B010-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="맥북 사용자의 윈도우10 개발환경 설정하기" /><published>2020-12-22T17:00:00+09:00</published> <updated>2021-03-31T22:07:27+09:00</updated> <id>https://gon125.github.io/posts/%EB%A7%A5%EB%B6%81-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9C%88%EB%8F%84%EC%9A%B010-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</id> <content src="https://gon125.github.io/posts/%EB%A7%A5%EB%B6%81-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9C%88%EB%8F%84%EC%9A%B010-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" /> <author> <name>Geonhyeong Lim</name> </author> <category term="Tips" /> <category term="Windows10" /> <summary> 왜? 이번에 저의 2018 맥북에어가 키보드 이슈가 있어서 수리를 맡기고 약 4일 동안을 윈도우 컴퓨터를 사용하게 되었습니다. 기본적인 개발환경을 설정하기에 윈도우의 환경변수 설정과 cmd 등은 저에게 너무 불편했습니다. 그래서 찾은 방법이 WSL 입니다. WSL을 이용하면 기존 가상머신과 같은 오버헤드 없이 리눅스환경을 윈도우에서 사용할 수 있다고 합니다. 꿩 대신 닭이라고 리눅스환경이라도 써 봅시다. WSL설치 먼저, 검색 - 제어판 - 프로그램 - Windows기능 켜기/끄기 에서 Linux용 Windows 하위 시스템 을 활성화 한 후 컴퓨터 재시작 합니다. 그 후 검색 - Microsoft Store 에서 Ubuntu 검색하셔서 설치합니다. WSL에 접속할... </summary> </entry> </feed>
